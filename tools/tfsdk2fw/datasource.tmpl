// Code generated by tools/tfsdk2fx/main.go. Manual editing is required.

package TODO

import (
    "context"

    "github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/tfsdk"
	"github.com/hashicorp/terraform-plugin-log/tflog"
)

func init() {
    // registerDataSourceType(TODO, &dataSource{{ .Name }}Type{})
}

var _ tfsdk.DataSourceType = &dataSource{{ .Name }}Type{}

type dataSource{{ .Name }}Type struct {}

// GetSchema returns the schema for this data source.
func (t *dataSource{{ .Name }}Type) GetSchema(context.Context) (tfsdk.Schema, diag.Diagnostics) {
    schema := {{ .Schema }}

    return schema, nil
}

// NewDataSource instantiates a new DataSource of this DataSourceType.
func (t *dataSource{{ .Name }}Type) NewDataSource(ctx context.Context, provider tfsdk.Provider) (tfsdk.DataSource, diag.Diagnostics) {
    return &dataSource{{ .Name }}{}, nil
}

type dataSource{{ .Name }} struct {}

// Read is called when the provider must read data source values in order to update state.
// Config values should be read from the ReadDataSourceRequest and new state values set on the ReadDataSourceResponse.
func (d *dataSource{{ .Name }}) Read(ctx context.Context, request tfsdk.ReadDataSourceRequest, response *tfsdk.ReadDataSourceResponse) {}